/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export function BankR1({ color, ...props }: any) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/game/Bank+1.glb');
  const { actions } = useAnimations(animations, group);

  const position = [-3.0777, 1.0154, -3.8426];
  const rotation = [0, 0.2688036, 0];

  useEffect(() => {
    if (color === undefined) {
      actions.Action.play();
    }
  }, [group]);

  return (
    <group ref={group} {...props} dispose={null}>
      {color === undefined && (
        <spotLight
          position={[position[0], position[1] + 0.2, position[2] + 0.3]}
          color={'aqua'}
          intensity={Math.PI * 2}
        />
      )}
      <group name='Scene'>
        <group name='Cube005'>
          <mesh
            name='Cube008'
            castShadow
            receiveShadow
            geometry={nodes.Cube008.geometry}
            material={materials.BankFace}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube008_1'
            castShadow
            receiveShadow
            geometry={nodes.Cube008_1.geometry}
            material={materials.BankColonnes}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube008_2'
            castShadow
            receiveShadow
            geometry={nodes.Cube008_2.geometry}
            material={materials.BankMarches}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube008_3'
            castShadow
            receiveShadow
            geometry={nodes.Cube008_3.geometry}
            material={materials.Lumiere}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube008_4'
            castShadow
            receiveShadow
            geometry={nodes.Cube008_4.geometry}
            material={materials.BankToit}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube008_5'
            castShadow
            receiveShadow
            geometry={nodes.Cube008_5.geometry}
            material={materials.Palette}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
        </group>
        {color === undefined && (
          <mesh
            name='Cylinder'
            castShadow
            receiveShadow
            geometry={nodes.Cylinder.geometry}
            material={materials.Token}
            position={[-3.857, 2.132, -3.278]}
            rotation={[Math.PI / 2, 0, 0]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
        )}
        <mesh
          name='Cylinder001'
          castShadow
          receiveShadow
          geometry={nodes.Cylinder001.geometry}
          material={materials.Token}
          position={[-1.911, 2.132, -3.805]}
          rotation={[Math.PI / 2, 0, 1.882]}
        >
          {color !== undefined && (
            <meshStandardMaterial color={color} transparent opacity={0.2} />
          )}
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload('/game/Bank+1.glb');
