/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';
import { Color, MeshStandardMaterial } from 'three';

export function TavernR2({ color, ...props }: any) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/game/Tavern+2.glb');
  const { actions } = useAnimations(animations, group);

  const emptyMaterial = new MeshStandardMaterial();
  emptyMaterial.color = new Color(color);
  emptyMaterial.transparent = true;
  emptyMaterial.opacity = 0.2;

  useEffect(() => {
    actions['ArmatureAction.001'].play();
  }, [group]);

  return (
    <group ref={group} {...props} dispose={null}>
      {color === undefined && (
        <>
          <pointLight
            position={[4.3041, 1.9694, 5.1689]}
            color={'yellow'}
            power={10}
          />

          <pointLight
            position={[5.5716, 1.9694, 5.4831]}
            color={'yellow'}
            power={10}
          />

          <pointLight
            position={[5.5124, 1.9694, 6.564]}
            color={'yellow'}
            power={10}
          />

          <pointLight
            position={[4.9129, 1.5467, 6.6745]}
            color={'yellow'}
            power={10}
          />

          <pointLight
            position={[4.1262, 1.5467, 6.072]}
            color={'yellow'}
            power={10}
          />

          <pointLight
            position={[4.9558, 1.8621, 5.7825]}
            power={10}
            color={'yellow'}
          />
        </>
      )}
      <group name='Scene'>
        <mesh
          name='Tonneaux'
          castShadow
          receiveShadow
          geometry={nodes.Tonneaux.geometry}
          material={color ? emptyMaterial : materials.Tonneau}
        />
        <group name='Interieur'>
          <mesh
            name='Cube036'
            castShadow
            receiveShadow
            geometry={nodes.Cube036.geometry}
            material={color ? emptyMaterial : materials.Palette}
          />
          <mesh
            name='Cube036_1'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_1.geometry}
            material={color ? emptyMaterial : materials.SkBase}
          />
          <mesh
            name='Cube036_2'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_2.geometry}
            material={color ? emptyMaterial : materials.SkShadow}
          />
          <mesh
            name='Cube036_3'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_3.geometry}
            material={color ? emptyMaterial : materials.SkTeeth}
          />
          <mesh
            name='Cube036_4'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_4.geometry}
            material={color ? emptyMaterial : materials.LanterneVerreLumière}
          />
          <mesh
            name='Cube036_5'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_5.geometry}
            material={color ? emptyMaterial : materials.Tabouret}
          />
          <mesh
            name='Cube036_6'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_6.geometry}
            material={color ? emptyMaterial : materials['Planches.001']}
          />
          <mesh
            name='Cube036_7'
            castShadow
            receiveShadow
            geometry={nodes.Cube036_7.geometry}
            material={color ? emptyMaterial : materials.Portrait}
          />
        </group>
        <group name='Taverne+2'>
          <mesh
            name='Cube002'
            castShadow
            receiveShadow
            geometry={nodes.Cube002.geometry}
            material={color ? emptyMaterial : materials.MursBardageBleu}
          />
          <mesh
            name='Cube002_1'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_1.geometry}
            material={color ? emptyMaterial : materials['Planches.001']}
          />
          <mesh
            name='Cube002_2'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_2.geometry}
            material={color ? emptyMaterial : materials.Vitraux}
          />
          <mesh
            name='Cube002_3'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_3.geometry}
            material={color ? emptyMaterial : materials.VitresLumière}
          />
          <mesh
            name='Cube002_4'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_4.geometry}
            material={color ? emptyMaterial : materials.Palette}
          />
          <mesh
            name='Cube002_5'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_5.geometry}
            material={color ? emptyMaterial : materials.LanterneVerreLumière}
          />
          <mesh
            name='Cube002_6'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_6.geometry}
            material={color ? emptyMaterial : materials['Cheminée.001']}
          />
          <mesh
            name='Cube002_7'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_7.geometry}
            material={color ? emptyMaterial : materials.Porte_1}
          />
          <mesh
            name='Cube002_8'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_8.geometry}
            material={color ? emptyMaterial : materials.Floor}
          />
          <mesh
            name='Cube002_9'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_9.geometry}
            material={color ? emptyMaterial : materials.Poutre_Inst}
          />
          <mesh
            name='Cube002_10'
            castShadow
            receiveShadow
            geometry={nodes.Cube002_10.geometry}
            material={color ? emptyMaterial : materials.ArdoisesVertes}
          />
        </group>
        <group
          name='Armature'
          position={[3.838, 1.035, 5.343]}
          rotation={[Math.PI, -0.875, Math.PI]}
          scale={0.4}
        >
          <group name='Crâne001'>
            <skinnedMesh
              name='Sphere016'
              geometry={nodes.Sphere016.geometry}
              material={color ? emptyMaterial : materials['Skeleton.001']}
              skeleton={nodes.Sphere016.skeleton}
            />
            <skinnedMesh
              name='Sphere016_1'
              geometry={nodes.Sphere016_1.geometry}
              material={color ? emptyMaterial : materials.Material}
              skeleton={nodes.Sphere016_1.skeleton}
            />
            <skinnedMesh
              name='Sphere016_2'
              geometry={nodes.Sphere016_2.geometry}
              material={color ? emptyMaterial : materials['Material.002']}
              skeleton={nodes.Sphere016_2.skeleton}
            />
            <skinnedMesh
              name='Sphere016_3'
              geometry={nodes.Sphere016_3.geometry}
              material={color ? emptyMaterial : materials['Material.001']}
              skeleton={nodes.Sphere016_3.skeleton}
            />
            <skinnedMesh
              name='Sphere016_4'
              geometry={nodes.Sphere016_4.geometry}
              material={color ? emptyMaterial : materials.BouteilleEtiquette}
              skeleton={nodes.Sphere016_4.skeleton}
            />
          </group>
          <primitive object={nodes.mixamorigHips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/game/Tavern+2.glb');
