/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export function CryptR2({ color, ...props }: any) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/game/Crypt+2.glb');
  const { actions } = useAnimations(animations, group);

  const position = [1.8028, 1.378, -5.3541];
  const rotation = [0, -0.4952958, 0];

  useEffect(() => {
    actions.Action.play();
  }, [group]);

  return (
    <group ref={group} {...props} dispose={null}>
      {color === undefined && (
        <spotLight
          position={[position[0] - 0.8, position[1] + 0.2, position[2] + 1]}
          color={'gold'}
          intensity={Math.PI * 2}
        />
      )}
      <group name="Scene">
        <group
          name="Armature001"
          position={[1.629, 3.762, -3.95]}
          rotation={[-2.471, -1.35, -2.447]}
        >
          <skinnedMesh
            name="Cube002"
            geometry={nodes.Cube002.geometry}
            material={materials.Corbeau}
            skeleton={nodes.Cube002.skeleton}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </skinnedMesh>
          <primitive object={nodes.Bone} />
        </group>
        <group name="Crypt+2">
          <mesh
            name="Plane004"
            castShadow
            receiveShadow
            geometry={nodes.Plane004.geometry}
            material={materials["Ardoises.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_1"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_1.geometry}
            material={materials.Charpente}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_2"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_2.geometry}
            material={materials["Colonnes.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_3"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_3.geometry}
            material={materials["Base.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_4"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_4.geometry}
            material={materials["Etage.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_5"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_5.geometry}
            material={materials["Vitres.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_6"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_6.geometry}
            material={materials["Vitraux.001"]}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name="Plane004_7"
            castShadow
            receiveShadow
            geometry={nodes.Plane004_7.geometry}
            material={materials["Porte.001"]}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/game/Crypt+2.glb');
