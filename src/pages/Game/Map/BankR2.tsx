/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export function BankR2({ color, ...props }: any) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/game/Bank+2.glb');
  const { actions } = useAnimations(animations, group);

  const position = [-3.0777, 1.0154, -3.8426];
  const rotation = [0, 0.2688036, 0];

  useEffect(() => {
    console.log(actions);
    actions.BankAction.play();
  }, [group]);

  return (
    <group ref={group} {...props} dispose={null}>
      {color === undefined && (
        <spotLight
          position={[position[0], position[1] + 0.2, position[2] + 0.3]}
          color={'aqua'}
          intensity={Math.PI * 2}
        />
      )}
      <group name='Scene'>
        <group name='Bank'>
          <mesh
            name='Cube010'
            castShadow
            receiveShadow
            geometry={nodes.Cube010.geometry}
            material={materials.BankFace}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube010_1'
            castShadow
            receiveShadow
            geometry={nodes.Cube010_1.geometry}
            material={materials.BankColonnes}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube010_2'
            castShadow
            receiveShadow
            geometry={nodes.Cube010_2.geometry}
            material={materials.BankMarches}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube010_3'
            castShadow
            receiveShadow
            geometry={nodes.Cube010_3.geometry}
            material={materials.Lumiere}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube010_4'
            castShadow
            receiveShadow
            geometry={nodes.Cube010_4.geometry}
            material={materials.BankToit}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube010_5'
            castShadow
            receiveShadow
            geometry={nodes.Cube010_5.geometry}
            material={materials.Palette}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
        </group>
        <mesh
          name='Token1001'
          castShadow
          receiveShadow
          geometry={nodes.Token1001.geometry}
          material={materials.Token}
          position={[-3.857, 2.132, -3.278]}
          rotation={[Math.PI / 2, 0, 0]}
        >
          {color !== undefined && (
            <meshStandardMaterial color={color} transparent opacity={0.2} />
          )}
        </mesh>
        <mesh
          name='Token2001'
          castShadow
          receiveShadow
          geometry={nodes.Token2001.geometry}
          material={materials.Token}
          position={[-1.911, 2.132, -3.805]}
          rotation={[Math.PI / 2, 0, 1.882]}
        >
          {color !== undefined && (
            <meshStandardMaterial color={color} transparent opacity={0.2} />
          )}
        </mesh>
        <group name='ArmatureSkeleton001' position={[-2.767, 1.127, -3.02]} scale={0.035}>
          <group name='LPSkeleton001'>
            <skinnedMesh
              name='Sphere002'
              geometry={nodes.Sphere002.geometry}
              material={materials.SkBase}
              skeleton={nodes.Sphere002.skeleton}
            >
              {color !== undefined && (
                <meshStandardMaterial color={color} transparent opacity={0.2} />
              )}
            </skinnedMesh>
            <skinnedMesh
              name='Sphere002_1'
              geometry={nodes.Sphere002_1.geometry}
              material={materials.SkShadow}
              skeleton={nodes.Sphere002_1.skeleton}
            >
              {color !== undefined && (
                <meshStandardMaterial color={color} transparent opacity={0.2} />
              )}
            </skinnedMesh>
            <skinnedMesh
              name='Sphere002_2'
              geometry={nodes.Sphere002_2.geometry}
              material={materials.SkTeeth}
              skeleton={nodes.Sphere002_2.skeleton}
            >
              {color !== undefined && (
                <meshStandardMaterial color={color} transparent opacity={0.2} />
              )}
            </skinnedMesh>
          </group>
          <primitive object={nodes.mixamorigHips} />
          <primitive object={nodes.Ctrl_Master} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Left} />
          <primitive object={nodes.Ctrl_Hand_IK_Left} />
          <primitive object={nodes.Ctrl_ArmPole_IK_Right} />
          <primitive object={nodes.Ctrl_Hand_IK_Right} />
          <primitive object={nodes.Ctrl_Foot_IK_Left} />
          <primitive object={nodes.Ctrl_LegPole_IK_Left} />
          <primitive object={nodes.Ctrl_Foot_IK_Right} />
          <primitive object={nodes.Ctrl_LegPole_IK_Right} />
        </group>
        <group
          name='Coffre001'
          position={[-2.613, 1.121, -2.955]}
          rotation={[0, 0.004, 0]}
          scale={0.044}
        >
          <mesh
            name='Cube011'
            castShadow
            receiveShadow
            geometry={nodes.Cube011.geometry}
            material={materials.CoffreBois}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube011_1'
            castShadow
            receiveShadow
            geometry={nodes.Cube011_1.geometry}
            material={materials.CoffreCuirSangles}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube011_2'
            castShadow
            receiveShadow
            geometry={nodes.Cube011_2.geometry}
            material={materials.CoffreCuirPanneaux}
          >
            {color !== undefined && (
              <meshStandardMaterial color={color} transparent opacity={0.2} />
            )}
          </mesh>
          <mesh
            name='Cube011_3'
            castShadow
            receiveShadow
            geometry={nodes.Cube011_3.geometry}
            material={materials.CoffreClou}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/game/Bank+2.glb');
